// <auto-generated />
using System;
using AssetData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssetData.Migrations
{
    [DbContext(typeof(AssetManagementContext))]
    partial class AssetManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AssetData.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AcquiredDate");

                    b.Property<string>("AssetComment");

                    b.Property<string>("AssetDescription");

                    b.Property<string>("AssetModel");

                    b.Property<string>("AssetName");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<int?>("DepartmentId");

                    b.Property<int?>("OwnershipHistoryId");

                    b.Property<DateTime>("RetiredDate");

                    b.Property<string>("SerialNumber");

                    b.Property<DateTime>("WarrantyDate");

                    b.Property<bool>("isDeleted");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("OwnershipHistoryId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("AssetData.Models.AssetStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetStatusDescription");

                    b.HasKey("Id");

                    b.ToTable("AssetStatuses");
                });

            modelBuilder.Entity("AssetData.Models.Attachments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName");

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("AssetData.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AssetData.Models.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionDescription");

                    b.HasKey("Id");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("AssetData.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentLocation")
                        .HasMaxLength(50);

                    b.Property<int>("DepartmentName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AssetData.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("EmployeeAddress");

                    b.Property<string>("EmployeeContactNumber")
                        .IsRequired();

                    b.Property<string>("EmployeeEmail");

                    b.Property<string>("EmployeeName")
                        .IsRequired();

                    b.Property<string>("EmployeeNote");

                    b.Property<int>("EmployeeNumber");

                    b.Property<string>("EmployeeSurname");

                    b.Property<int?>("OwnershipHistoryId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("OwnershipHistoryId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AssetData.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ManufactureContactNumber")
                        .IsRequired();

                    b.Property<string>("ManufactureContactPerson");

                    b.Property<string>("ManufactureName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("AssetData.Models.OwnershipHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OwnershipHistoryCreatedOnDate");

                    b.Property<string>("Reason")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("OwnershipHistories");
                });

            modelBuilder.Entity("AssetData.Models.Repair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateBookedIn");

                    b.Property<DateTime>("DateCollected");

                    b.Property<string>("Fault")
                        .IsRequired();

                    b.Property<string>("Satisfaction");

                    b.HasKey("Id");

                    b.ToTable("Repairs");
                });

            modelBuilder.Entity("AssetData.Models.Asset", b =>
                {
                    b.HasOne("AssetData.Models.Department")
                        .WithMany("Assets")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("AssetData.Models.OwnershipHistory")
                        .WithMany("Assets")
                        .HasForeignKey("OwnershipHistoryId");
                });

            modelBuilder.Entity("AssetData.Models.Employee", b =>
                {
                    b.HasOne("AssetData.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("AssetData.Models.OwnershipHistory")
                        .WithMany("Employees")
                        .HasForeignKey("OwnershipHistoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
